{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/nextjs/pages/index.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch'; // import withLayout from '../components/Layout-HOF';\n// Create Dynamic Pages\n// const PostLink = props => (\n//   <li>\n//     <Link href={`post?title=${props.title}` as=\"\"}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Basics of Next.js\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// Clean URLs with Dynamic Routing\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"basics-of-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// export default function Index() {\n//   return (\n//     <Layout>\n//       <h1>Hello Next.js</h1>\n//     </Layout>\n//   );\n// }\n// Using Layout as a higher order component.\n// const Page = () => <p>Hello Next.js</p>;\n// export default withLayout(Page);\n// Fetching Data for Pages\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   // console.log(data);\n//   console.log(`Show data fetched. Count: ${data.length}`); // This console log only shows in terminal because it's server-side rendered. It will show if you navigate to the home page since it's client-side navigation.\n//   return { shows: data.map(entry => entry.show) }\n// };\n// export default Index;\n// Check to see if it's client-side navigation by:\n// - Use npm run build\n// - Use npm start (gets production build going)\n// - Look at network tab in console.\n// - Click on a navigation link and see if you see any activity in the network tab.\n// - Type \"document\" means that it's server-side navigation (if you see a bunch of javascript pages being loaded along with a \"document\" type when you visit the page, it's most likely client-side navigation)\n// - If you don't see any activity while navigating in the network tab, it's client-side navigation.\n// Client-side navigation means that the website's pages have already been downloaded when you first connected to the website and the browser is loading them upon clicking a link.\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'basics-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, post.title)));\n};\n\nexport default function Blog() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-344512576\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-344512576\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, getPosts().map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      className: \"jsx-344512576\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-344512576\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, post.title)));\n  })), __jsx(_JSXStyle, {\n    id: \"344512576\",\n    __self: this\n  }, \"h1.jsx-344512576,a.jsx-344512576{font-family:'Arial';}ul.jsx-344512576{padding:0;}li.jsx-344512576{list-style:none;margin:5px 0;}a.jsx-344512576{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-344512576:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Rldi9sZnovbmV4dGpzL3BhZ2VzL2luZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtSWtCLEFBSStCLEFBSVYsQUFJTSxBQUtLLEFBS1QsVUFiZCxFQWNBLElBVmUsSUFSZixTQVNBLHFCQUlhLFdBQ2IiLCJmaWxlIjoiL2hvbWUvZGV2L2xmei9uZXh0anMvcGFnZXMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vY29tcG9uZW50cy9IZWFkZXInO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbi8vIGltcG9ydCB3aXRoTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0LUhPRic7XG5cbi8vIENyZWF0ZSBEeW5hbWljIFBhZ2VzXG4vLyBjb25zdCBQb3N0TGluayA9IHByb3BzID0+IChcbi8vICAgPGxpPlxuLy8gICAgIDxMaW5rIGhyZWY9e2Bwb3N0P3RpdGxlPSR7cHJvcHMudGl0bGV9YCBhcz1cIlwifT5cbi8vICAgICAgIDxhPntwcm9wcy50aXRsZX08L2E+XG4vLyAgICAgPC9MaW5rPlxuLy8gICA8L2xpPlxuLy8gKTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmxvZygpIHtcbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPGgxPk15IEJsb2c8L2gxPlxuLy8gICAgICAgPHVsPlxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJIZWxsbyBOZXh0LmpzXCIgLz5cbi8vICAgICAgICAgPFBvc3RMaW5rIHRpdGxlPVwiQmFzaWNzIG9mIE5leHQuanNcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJEZXBsb3kgYXBwcyB3aXRoIFplaXRcIiAvPlxuLy8gICAgICAgPC91bD5cbi8vICAgICA8L0xheW91dD5cbi8vICAgKTtcbi8vIH1cblxuLy8gQ2xlYW4gVVJMcyB3aXRoIER5bmFtaWMgUm91dGluZ1xuLy8gY29uc3QgUG9zdExpbmsgPSBwcm9wcyA9PiAoXG4vLyAgIDxsaT5cbi8vICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtwcm9wcy5pZH1gfT5cbi8vICAgICAgIDxhPntwcm9wcy5pZH08L2E+XG4vLyAgICAgPC9MaW5rPlxuLy8gICA8L2xpPlxuLy8gKTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmxvZygpIHtcbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPGgxPk15IEJsb2c8L2gxPlxuLy8gICAgICAgPHVsPlxuLy8gICAgICAgICA8UG9zdExpbmsgaWQ9XCJoZWxsby1uZXh0anNcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgaWQ9XCJiYXNpY3Mtb2YtbmV4dGpzXCIgLz5cbi8vICAgICAgICAgPFBvc3RMaW5rIGlkPVwiZGVwbG95LW5leHRqc1wiIC8+XG4vLyAgICAgICA8L3VsPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPGgxPkhlbGxvIE5leHQuanM8L2gxPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG4vLyBVc2luZyBMYXlvdXQgYXMgYSBoaWdoZXIgb3JkZXIgY29tcG9uZW50LlxuLy8gY29uc3QgUGFnZSA9ICgpID0+IDxwPkhlbGxvIE5leHQuanM8L3A+O1xuXG4vLyBleHBvcnQgZGVmYXVsdCB3aXRoTGF5b3V0KFBhZ2UpO1xuXG4vLyBGZXRjaGluZyBEYXRhIGZvciBQYWdlc1xuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4vLyAgIDxMYXlvdXQ+XG4vLyAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4vLyAgICAgPHVsPlxuLy8gICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4vLyAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbi8vICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgIDwvTGluaz5cbi8vICAgICAgICAgPC9saT5cbi8vICAgICAgICkpfVxuLy8gICAgIDwvdWw+XG4vLyAgIDwvTGF5b3V0PlxuLy8gKTtcblxuLy8gSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuLy8gICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcbi8vICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbi8vICAgLy8gY29uc29sZS5sb2coZGF0YSk7XG4vLyAgIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7IC8vIFRoaXMgY29uc29sZSBsb2cgb25seSBzaG93cyBpbiB0ZXJtaW5hbCBiZWNhdXNlIGl0J3Mgc2VydmVyLXNpZGUgcmVuZGVyZWQuIEl0IHdpbGwgc2hvdyBpZiB5b3UgbmF2aWdhdGUgdG8gdGhlIGhvbWUgcGFnZSBzaW5jZSBpdCdzIGNsaWVudC1zaWRlIG5hdmlnYXRpb24uXG5cbi8vICAgcmV0dXJuIHsgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpIH1cbi8vIH07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IEluZGV4O1xuXG4vLyBDaGVjayB0byBzZWUgaWYgaXQncyBjbGllbnQtc2lkZSBuYXZpZ2F0aW9uIGJ5OlxuLy8gLSBVc2UgbnBtIHJ1biBidWlsZFxuLy8gLSBVc2UgbnBtIHN0YXJ0IChnZXRzIHByb2R1Y3Rpb24gYnVpbGQgZ29pbmcpXG4vLyAtIExvb2sgYXQgbmV0d29yayB0YWIgaW4gY29uc29sZS5cbi8vIC0gQ2xpY2sgb24gYSBuYXZpZ2F0aW9uIGxpbmsgYW5kIHNlZSBpZiB5b3Ugc2VlIGFueSBhY3Rpdml0eSBpbiB0aGUgbmV0d29yayB0YWIuXG4vLyAtIFR5cGUgXCJkb2N1bWVudFwiIG1lYW5zIHRoYXQgaXQncyBzZXJ2ZXItc2lkZSBuYXZpZ2F0aW9uIChpZiB5b3Ugc2VlIGEgYnVuY2ggb2YgamF2YXNjcmlwdCBwYWdlcyBiZWluZyBsb2FkZWQgYWxvbmcgd2l0aCBhIFwiZG9jdW1lbnRcIiB0eXBlIHdoZW4geW91IHZpc2l0IHRoZSBwYWdlLCBpdCdzIG1vc3QgbGlrZWx5IGNsaWVudC1zaWRlIG5hdmlnYXRpb24pXG4vLyAtIElmIHlvdSBkb24ndCBzZWUgYW55IGFjdGl2aXR5IHdoaWxlIG5hdmlnYXRpbmcgaW4gdGhlIG5ldHdvcmsgdGFiLCBpdCdzIGNsaWVudC1zaWRlIG5hdmlnYXRpb24uXG5cbi8vIENsaWVudC1zaWRlIG5hdmlnYXRpb24gbWVhbnMgdGhhdCB0aGUgd2Vic2l0ZSdzIHBhZ2VzIGhhdmUgYWxyZWFkeSBiZWVuIGRvd25sb2FkZWQgd2hlbiB5b3UgZmlyc3QgY29ubmVjdGVkIHRvIHRoZSB3ZWJzaXRlIGFuZCB0aGUgYnJvd3NlciBpcyBsb2FkaW5nIHRoZW0gdXBvbiBjbGlja2luZyBhIGxpbmsuXG5cblxuZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4gIHJldHVybiBbXG4gICAgeyBpZDogJ2hlbGxvLW5leHRqcycsIHRpdGxlOiAnSGVsbG8gTmV4dC5qcycgfSxcbiAgICB7IGlkOiAnYmFzaWNzLW5leHRqcycsIHRpdGxlOiAnTGVhcm4gTmV4dC5qcyBpcyBhd2Vzb21lJyB9LFxuICAgIHsgaWQ6ICdkZXBsb3ktbmV4dGpzJywgdGl0bGU6ICdEZXBsb3kgYXBwcyB3aXRoIFpFSVQnIH1cbiAgXTtcbn1cblxuY29uc3QgUG9zdExpbmsgPSAoeyBwb3N0IH0pID0+IChcbiAgPGxpPlxuICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICA8YT57cG9zdC50aXRsZX08L2E+XG4gICAgPC9MaW5rPlxuICA8L2xpPlxuKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+TXkgQmxvZzwvaDE+XG4gICAgICA8dWw+XG4gICAgICAgIHtnZXRQb3N0cygpLm1hcChwb3N0ID0+IChcbiAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICAgICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGgxLFxuICAgICAgICBhIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGEge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/home/dev/lfz/nextjs/pages/index.jsx */\"));\n}","map":{"version":3,"sources":["/home/dev/lfz/nextjs/pages/index.jsx"],"names":["Link","Header","Layout","fetch","getPosts","id","title","PostLink","post","Blog","map"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,SAASC,QAAT,GAAoB;AAClB,SAAO,CACL;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHK,CAAP;AAKD;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,IAAI,CAACH,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAI,CAACF,KAAT,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,eAAe,SAASG,IAAT,GAAgB;AAC7B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,GAAGM,GAAX,CAAe,UAAAF,IAAI;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQG,IAAI,CAACH,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,IAAI,CAACF,KAAT,CADF,CADF,CADkB;AAAA,GAAnB,CADH,CAFF;AAAA;AAAA;AAAA,urMADF;AAuCD","sourcesContent":["import Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n// import withLayout from '../components/Layout-HOF';\n\n// Create Dynamic Pages\n// const PostLink = props => (\n//   <li>\n//     <Link href={`post?title=${props.title}` as=\"\"}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Basics of Next.js\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// Clean URLs with Dynamic Routing\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"basics-of-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// export default function Index() {\n//   return (\n//     <Layout>\n//       <h1>Hello Next.js</h1>\n//     </Layout>\n//   );\n// }\n\n// Using Layout as a higher order component.\n// const Page = () => <p>Hello Next.js</p>;\n\n// export default withLayout(Page);\n\n// Fetching Data for Pages\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   // console.log(data);\n//   console.log(`Show data fetched. Count: ${data.length}`); // This console log only shows in terminal because it's server-side rendered. It will show if you navigate to the home page since it's client-side navigation.\n\n//   return { shows: data.map(entry => entry.show) }\n// };\n\n// export default Index;\n\n// Check to see if it's client-side navigation by:\n// - Use npm run build\n// - Use npm start (gets production build going)\n// - Look at network tab in console.\n// - Click on a navigation link and see if you see any activity in the network tab.\n// - Type \"document\" means that it's server-side navigation (if you see a bunch of javascript pages being loaded along with a \"document\" type when you visit the page, it's most likely client-side navigation)\n// - If you don't see any activity while navigating in the network tab, it's client-side navigation.\n\n// Client-side navigation means that the website's pages have already been downloaded when you first connected to the website and the browser is loading them upon clicking a link.\n\n\nfunction getPosts() {\n  return [\n    { id: 'hello-nextjs', title: 'Hello Next.js' },\n    { id: 'basics-nextjs', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n  ];\n}\n\nconst PostLink = ({ post }) => (\n  <li>\n    <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n      <a>{post.title}</a>\n    </Link>\n  </li>\n)\n\nexport default function Blog() {\n  return (\n    <Layout>\n      <h1>My Blog</h1>\n      <ul>\n        {getPosts().map(post => (\n          <li key={post.id}>\n            <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}\n      </style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}