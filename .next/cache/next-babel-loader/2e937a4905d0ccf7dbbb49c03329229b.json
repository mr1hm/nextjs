{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/nextjs/pages/p/[id].jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown'; // const Post = () => {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content with ID</p>\n//     </Layout>\n//   );\n// }\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//     {props.show.image ? <img src={props.show.image.medium} /> : null}\n//   </Layout>\n// );\n// Post.getInitialProps = async function (context) {\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n//   console.log(`Fetched show: ${show.name}`); // This console log shows only the browser because it's using client-side navigation.\n//   return { show };\n// }\n// export default Post;\n\nexport default (() => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2471469161\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-2471469161\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: `\n          This is our blog post.\n          Yes. We can have a [link](/link).\n          And we can have a title as well.\n\n          ### This is a title\n\n          And here's the content.\n          `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2471469161\",\n    __self: this\n  }, \".markdown{font-family:'Nunito',sans-serif;}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Rldi9sZnovbmV4dGpzL3BhZ2VzL3AvW2lkXS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdURTLEFBRzRDLEFBSVosQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixhQWQzQixZQWVBLE1BWGEsV0FDYiIsImZpbGUiOiIvaG9tZS9kZXYvbGZ6L25leHRqcy9wYWdlcy9wL1tpZF0uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbmltcG9ydCBNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bic7XG5cbi8vIGNvbnN0IFBvc3QgPSAoKSA9PiB7XG4vLyAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG4vLyAgIHJldHVybiAoXG4vLyAgICAgPExheW91dD5cbi8vICAgICAgIDxoMT57cm91dGVyLnF1ZXJ5LmlkfTwvaDE+XG4vLyAgICAgICA8cD5UaGlzIGlzIHRoZSBibG9nIHBvc3QgY29udGVudCB3aXRoIElEPC9wPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG4vLyBjb25zdCBQb3N0ID0gcHJvcHMgPT4gKFxuLy8gICA8TGF5b3V0PlxuLy8gICAgIDxoMT57cHJvcHMuc2hvdy5uYW1lfTwvaDE+XG4vLyAgICAgPHA+e3Byb3BzLnNob3cuc3VtbWFyeS5yZXBsYWNlKC88Wy9dP1twYl0+L2csICcnKX08L3A+XG4vLyAgICAge3Byb3BzLnNob3cuaW1hZ2UgPyA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5tZWRpdW19IC8+IDogbnVsbH1cbi8vICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyBQb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4vLyAgIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnk7XG4vLyAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YCk7XG4vLyAgIGNvbnN0IHNob3cgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApOyAvLyBUaGlzIGNvbnNvbGUgbG9nIHNob3dzIG9ubHkgdGhlIGJyb3dzZXIgYmVjYXVzZSBpdCdzIHVzaW5nIGNsaWVudC1zaWRlIG5hdmlnYXRpb24uXG5cbi8vICAgcmV0dXJuIHsgc2hvdyB9O1xuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBQb3N0O1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxuICAgICAgICA8TWFya2Rvd25cbiAgICAgICAgICBzb3VyY2U9e2BcbiAgICAgICAgICBUaGlzIGlzIG91ciBibG9nIHBvc3QuXG4gICAgICAgICAgWWVzLiBXZSBjYW4gaGF2ZSBhIFtsaW5rXSgvbGluaykuXG4gICAgICAgICAgQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgd2VsbC5cblxuICAgICAgICAgICMjIyBUaGlzIGlzIGEgdGl0bGVcblxuICAgICAgICAgIEFuZCBoZXJlJ3MgdGhlIGNvbnRlbnQuXG4gICAgICAgICAgYH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XG4gICAgICAgIHtgXG4gICAgICAgIC5tYXJrZG93biB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdOdW5pdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGEge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gaDMge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuIl19 */\\n/*@ sourceURL=/home/dev/lfz/nextjs/pages/p/[id].jsx */\"));\n});","map":{"version":3,"sources":["/home/dev/lfz/nextjs/pages/p/[id].jsx"],"names":["useRouter","Layout","fetch","Markdown","router","query","id"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,gBAAe,MAAM;AACnB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,MAAM,EAAG;;;;;;;;WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAAA;AAAA;AAAA,gmGADF;AAwCD,CA1CD","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\n\n// const Post = () => {\n//   const router = useRouter();\n\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content with ID</p>\n//     </Layout>\n//   );\n// }\n\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//     {props.show.image ? <img src={props.show.image.medium} /> : null}\n//   </Layout>\n// );\n\n// Post.getInitialProps = async function (context) {\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n\n//   console.log(`Fetched show: ${show.name}`); // This console log shows only the browser because it's using client-side navigation.\n\n//   return { show };\n// }\n\n// export default Post;\n\nexport default () => {\n  const router = useRouter();\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n      <div className=\"markdown\">\n        <Markdown\n          source={`\n          This is our blog post.\n          Yes. We can have a [link](/link).\n          And we can have a title as well.\n\n          ### This is a title\n\n          And here's the content.\n          `}\n        />\n      </div>\n      <style jsx global>\n        {`\n        .markdown {\n          font-family: 'Nunito', sans-serif;\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n        `}\n      </style>\n    </Layout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}