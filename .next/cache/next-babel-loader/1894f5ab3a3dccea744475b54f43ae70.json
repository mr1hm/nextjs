{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/nextjs/pages/index.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch'; // import withLayout from '../components/Layout-HOF';\n// Create Dynamic Pages\n// const PostLink = props => (\n//   <li>\n//     <Link href={`post?title=${props.title}` as=\"\"}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Basics of Next.js\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// Clean URLs with Dynamic Routing\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"basics-of-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// export default function Index() {\n//   return (\n//     <Layout>\n//       <h1>Hello Next.js</h1>\n//     </Layout>\n//   );\n// }\n// Using Layout as a higher order component.\n// const Page = () => <p>Hello Next.js</p>;\n// export default withLayout(Page);\n// Fetching Data for Pages\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   // console.log(data);\n//   console.log(`Show data fetched. Count: ${data.length}`); // This console log only shows in terminal because it's server-side rendered. It will show if you navigate to the home page since it's client-side navigation.\n//   return { shows: data.map(entry => entry.show) }\n// };\n// export default Index;\n// Check to see if it's client-side navigation by:\n// - Use npm run build\n// - Use npm start (gets production build going)\n// - Look at network tab in console.\n// - Click on a navigation link and see if you see any activity in the network tab.\n// - Type \"document\" means that it's server-side navigation (if you see a bunch of javascript pages being loaded along with a \"document\" type when you visit the page, it's most likely client-side navigation)\n// - If you don't see any activity while navigating in the network tab, it's client-side navigation.\n// Client-side navigation means that the website's pages have already been downloaded when you first connected to the website and the browser is loading them upon clicking a link.\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'basics-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nexport default function Blog() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2845534719\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-2845534719\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, getPosts().map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      className: \"jsx-2845534719\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-2845534719\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, post.title)));\n  })), __jsx(_JSXStyle, {\n    id: \"2845534719\",\n    __self: this\n  }, \"h1.jsx-2845534719,a.jsx-2845534719{font - family:'Arial';}ul.jsx-2845534719{padding:0;}li.jsx-2845534719{list - style:none;margin:5px 0;}a.jsx-2845534719{text - decoration:none;color:blue;}a.jsx-2845534719:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Rldi9sZnovbmV4dGpzL3BhZ2VzL2luZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEySGtCLEFBSWlDLEFBSVosQUFJUSxBQUtLLEFBS1gsVUFiZCxFQWNBLE1BVmUsSUFSZixDQWFhLFFBSmIsR0FLQSIsImZpbGUiOiIvaG9tZS9kZXYvbGZ6L25leHRqcy9wYWdlcy9pbmRleC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuLy8gaW1wb3J0IHdpdGhMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQtSE9GJztcblxuLy8gQ3JlYXRlIER5bmFtaWMgUGFnZXNcbi8vIGNvbnN0IFBvc3RMaW5rID0gcHJvcHMgPT4gKFxuLy8gICA8bGk+XG4vLyAgICAgPExpbmsgaHJlZj17YHBvc3Q/dGl0bGU9JHtwcm9wcy50aXRsZX1gIGFzPVwiXCJ9PlxuLy8gICAgICAgPGE+e3Byb3BzLnRpdGxlfTwvYT5cbi8vICAgICA8L0xpbms+XG4vLyAgIDwvbGk+XG4vLyApO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4vLyAgICAgICA8dWw+XG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkhlbGxvIE5leHQuanNcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJCYXNpY3Mgb2YgTmV4dC5qc1wiIC8+XG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkRlcGxveSBhcHBzIHdpdGggWmVpdFwiIC8+XG4vLyAgICAgICA8L3VsPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG4vLyBDbGVhbiBVUkxzIHdpdGggRHluYW1pYyBSb3V0aW5nXG4vLyBjb25zdCBQb3N0TGluayA9IHByb3BzID0+IChcbi8vICAgPGxpPlxuLy8gICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Byb3BzLmlkfWB9PlxuLy8gICAgICAgPGE+e3Byb3BzLmlkfTwvYT5cbi8vICAgICA8L0xpbms+XG4vLyAgIDwvbGk+XG4vLyApO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4vLyAgICAgICA8dWw+XG4vLyAgICAgICAgIDxQb3N0TGluayBpZD1cImhlbGxvLW5leHRqc1wiIC8+XG4vLyAgICAgICAgIDxQb3N0TGluayBpZD1cImJhc2ljcy1vZi1uZXh0anNcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgaWQ9XCJkZXBsb3ktbmV4dGpzXCIgLz5cbi8vICAgICAgIDwvdWw+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyAgICk7XG4vLyB9XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KCkge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8aDE+SGVsbG8gTmV4dC5qczwvaDE+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyAgICk7XG4vLyB9XG5cbi8vIFVzaW5nIExheW91dCBhcyBhIGhpZ2hlciBvcmRlciBjb21wb25lbnQuXG4vLyBjb25zdCBQYWdlID0gKCkgPT4gPHA+SGVsbG8gTmV4dC5qczwvcD47XG5cbi8vIGV4cG9ydCBkZWZhdWx0IHdpdGhMYXlvdXQoUGFnZSk7XG5cbi8vIEZldGNoaW5nIERhdGEgZm9yIFBhZ2VzXG4vLyBjb25zdCBJbmRleCA9IHByb3BzID0+IChcbi8vICAgPExheW91dD5cbi8vICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbi8vICAgICA8dWw+XG4vLyAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuLy8gICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxuLy8gICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XG4vLyAgICAgICAgICAgPC9MaW5rPlxuLy8gICAgICAgICA8L2xpPlxuLy8gICAgICAgKSl9XG4vLyAgICAgPC91bD5cbi8vICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyBJbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4vLyAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuLy8gICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcbi8vICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTsgLy8gVGhpcyBjb25zb2xlIGxvZyBvbmx5IHNob3dzIGluIHRlcm1pbmFsIGJlY2F1c2UgaXQncyBzZXJ2ZXItc2lkZSByZW5kZXJlZC4gSXQgd2lsbCBzaG93IGlmIHlvdSBuYXZpZ2F0ZSB0byB0aGUgaG9tZSBwYWdlIHNpbmNlIGl0J3MgY2xpZW50LXNpZGUgbmF2aWdhdGlvbi5cblxuLy8gICByZXR1cm4geyBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdykgfVxuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgSW5kZXg7XG5cbi8vIENoZWNrIHRvIHNlZSBpZiBpdCdzIGNsaWVudC1zaWRlIG5hdmlnYXRpb24gYnk6XG4vLyAtIFVzZSBucG0gcnVuIGJ1aWxkXG4vLyAtIFVzZSBucG0gc3RhcnQgKGdldHMgcHJvZHVjdGlvbiBidWlsZCBnb2luZylcbi8vIC0gTG9vayBhdCBuZXR3b3JrIHRhYiBpbiBjb25zb2xlLlxuLy8gLSBDbGljayBvbiBhIG5hdmlnYXRpb24gbGluayBhbmQgc2VlIGlmIHlvdSBzZWUgYW55IGFjdGl2aXR5IGluIHRoZSBuZXR3b3JrIHRhYi5cbi8vIC0gVHlwZSBcImRvY3VtZW50XCIgbWVhbnMgdGhhdCBpdCdzIHNlcnZlci1zaWRlIG5hdmlnYXRpb24gKGlmIHlvdSBzZWUgYSBidW5jaCBvZiBqYXZhc2NyaXB0IHBhZ2VzIGJlaW5nIGxvYWRlZCBhbG9uZyB3aXRoIGEgXCJkb2N1bWVudFwiIHR5cGUgd2hlbiB5b3UgdmlzaXQgdGhlIHBhZ2UsIGl0J3MgbW9zdCBsaWtlbHkgY2xpZW50LXNpZGUgbmF2aWdhdGlvbilcbi8vIC0gSWYgeW91IGRvbid0IHNlZSBhbnkgYWN0aXZpdHkgd2hpbGUgbmF2aWdhdGluZyBpbiB0aGUgbmV0d29yayB0YWIsIGl0J3MgY2xpZW50LXNpZGUgbmF2aWdhdGlvbi5cblxuLy8gQ2xpZW50LXNpZGUgbmF2aWdhdGlvbiBtZWFucyB0aGF0IHRoZSB3ZWJzaXRlJ3MgcGFnZXMgaGF2ZSBhbHJlYWR5IGJlZW4gZG93bmxvYWRlZCB3aGVuIHlvdSBmaXJzdCBjb25uZWN0ZWQgdG8gdGhlIHdlYnNpdGUgYW5kIHRoZSBicm93c2VyIGlzIGxvYWRpbmcgdGhlbSB1cG9uIGNsaWNraW5nIGEgbGluay5cblxuXG5mdW5jdGlvbiBnZXRQb3N0cygpIHtcbiAgcmV0dXJuIFtcbiAgICB7IGlkOiAnaGVsbG8tbmV4dGpzJywgdGl0bGU6ICdIZWxsbyBOZXh0LmpzJyB9LFxuICAgIHsgaWQ6ICdiYXNpY3MtbmV4dGpzJywgdGl0bGU6ICdMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWUnIH0sXG4gICAgeyBpZDogJ2RlcGxveS1uZXh0anMnLCB0aXRsZTogJ0RlcGxveSBhcHBzIHdpdGggWkVJVCcgfVxuICBdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+TXkgQmxvZzwvaDE+XG4gICAgICA8dWw+XG4gICAgICAgIHtnZXRQb3N0cygpLm1hcChwb3N0ID0+IChcbiAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICAgICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGgxLFxuICAgICAgICBhIHtcbiAgICAgICAgICBmb250IC0gZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgdWwge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdCAtIHN0eWxlOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0IC0gZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/home/dev/lfz/nextjs/pages/index.jsx */\"));\n}","map":{"version":3,"sources":["/home/dev/lfz/nextjs/pages/index.jsx"],"names":["Link","Header","Layout","fetch","getPosts","id","title","Blog","map","post"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,SAASC,QAAT,GAAoB;AAClB,SAAO,CACL;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHK,CAAP;AAKD;;AAED,eAAe,SAASC,IAAT,GAAgB;AAC7B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,GAAGI,GAAX,CAAe,UAAAC,IAAI;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQI,IAAI,CAACJ,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,IAAI,CAACH,KAAT,CADF,CADF,CADkB;AAAA,GAAnB,CADH,CAFF;AAAA;AAAA;AAAA,0+LADF;AAuCD","sourcesContent":["import Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n// import withLayout from '../components/Layout-HOF';\n\n// Create Dynamic Pages\n// const PostLink = props => (\n//   <li>\n//     <Link href={`post?title=${props.title}` as=\"\"}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Basics of Next.js\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// Clean URLs with Dynamic Routing\n// const PostLink = props => (\n//   <li>\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" />\n//         <PostLink id=\"basics-of-nextjs\" />\n//         <PostLink id=\"deploy-nextjs\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// export default function Index() {\n//   return (\n//     <Layout>\n//       <h1>Hello Next.js</h1>\n//     </Layout>\n//   );\n// }\n\n// Using Layout as a higher order component.\n// const Page = () => <p>Hello Next.js</p>;\n\n// export default withLayout(Page);\n\n// Fetching Data for Pages\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   // console.log(data);\n//   console.log(`Show data fetched. Count: ${data.length}`); // This console log only shows in terminal because it's server-side rendered. It will show if you navigate to the home page since it's client-side navigation.\n\n//   return { shows: data.map(entry => entry.show) }\n// };\n\n// export default Index;\n\n// Check to see if it's client-side navigation by:\n// - Use npm run build\n// - Use npm start (gets production build going)\n// - Look at network tab in console.\n// - Click on a navigation link and see if you see any activity in the network tab.\n// - Type \"document\" means that it's server-side navigation (if you see a bunch of javascript pages being loaded along with a \"document\" type when you visit the page, it's most likely client-side navigation)\n// - If you don't see any activity while navigating in the network tab, it's client-side navigation.\n\n// Client-side navigation means that the website's pages have already been downloaded when you first connected to the website and the browser is loading them upon clicking a link.\n\n\nfunction getPosts() {\n  return [\n    { id: 'hello-nextjs', title: 'Hello Next.js' },\n    { id: 'basics-nextjs', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n  ];\n}\n\nexport default function Blog() {\n  return (\n    <Layout>\n      <h1>My Blog</h1>\n      <ul>\n        {getPosts().map(post => (\n          <li key={post.id}>\n            <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font - family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list - style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text - decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}\n      </style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}